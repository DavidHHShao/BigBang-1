load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "go_default_library",
    srcs = [
        "api.go",
        "config.go",
        "filesystem.go",
        "manifest.go",
        "storage.go",
        "testapi.go",
        "uri.go",
    ],
    importmap = "BigBang/vendor/github.com/ethereum/go-ethereum/swarm/api",
    importpath = "github.com/ethereum/go-ethereum/swarm/api",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/ethereum/go-ethereum/common:go_default_library",
        "//vendor/github.com/ethereum/go-ethereum/contracts/ens:go_default_library",
        "//vendor/github.com/ethereum/go-ethereum/core/types:go_default_library",
        "//vendor/github.com/ethereum/go-ethereum/crypto:go_default_library",
        "//vendor/github.com/ethereum/go-ethereum/metrics:go_default_library",
        "//vendor/github.com/ethereum/go-ethereum/node:go_default_library",
        "//vendor/github.com/ethereum/go-ethereum/p2p/discover:go_default_library",
        "//vendor/github.com/ethereum/go-ethereum/swarm/log:go_default_library",
        "//vendor/github.com/ethereum/go-ethereum/swarm/multihash:go_default_library",
        "//vendor/github.com/ethereum/go-ethereum/swarm/network:go_default_library",
        "//vendor/github.com/ethereum/go-ethereum/swarm/pss:go_default_library",
        "//vendor/github.com/ethereum/go-ethereum/swarm/services/swap:go_default_library",
        "//vendor/github.com/ethereum/go-ethereum/swarm/spancontext:go_default_library",
        "//vendor/github.com/ethereum/go-ethereum/swarm/storage:go_default_library",
        "//vendor/github.com/ethereum/go-ethereum/swarm/storage/mru:go_default_library",
        "//vendor/github.com/opentracing/opentracing-go:go_default_library",
    ],
)
